{"ast":null,"code":"var _jsxFileName = \"/Users/kyoorim/Desktop/practice-coding/udemy-05-foodOrder/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName); // 비어있지 않다면 값이 false가 아니어야한다는 뜻\n\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    } // submit cart data\n\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? \"\" : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? \"\" : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postal ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please your street address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please your postal code (5 characters long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please your city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"g2qj1arG/Z7zQ643PijiepqJDXM=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","postal","city","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","cityControlClasses","form","actions","onCancel","submit"],"sources":["/Users/kyoorim/Desktop/practice-coding/udemy-05-foodOrder/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\n\nimport classes from \"./Checkout.module.css\";\n\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName); // 비어있지 않다면 값이 false가 아니어야한다는 뜻\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      postal: enteredPostalIsValid,\n      city: enteredCityIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredPostalIsValid &&\n      enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n    // submit cart data\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidity.street ? \"\" : classes.invalid\n  }`;\n  const postalControlClasses = `${classes.control} ${\n    formInputsValidity.postal ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter your name</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please your street address</p>}\n      </div>\n      <div className={postalControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputsValidity.postal && (\n          <p>Please your postal code (5 characters long)</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please your city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}